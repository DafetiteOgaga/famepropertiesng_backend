# Generated by Django 5.2.5 on 2025-10-01 01:58

import django.contrib.auth.models
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('email', models.EmailField(db_index=True, max_length=200, unique=True)),
                ('mobile_no', models.CharField(max_length=20)),
                ('address', models.CharField(max_length=200)),
                ('city', models.CharField(blank=True, max_length=100, null=True)),
                ('cityId', models.IntegerField(blank=True, null=True)),
                ('state', models.CharField(blank=True, max_length=100, null=True)),
                ('stateId', models.IntegerField(blank=True, null=True)),
                ('hasCities', models.BooleanField(default=False)),
                ('country', models.CharField(blank=True, max_length=100, null=True)),
                ('countryId', models.IntegerField(blank=True, null=True)),
                ('hasStates', models.BooleanField(default=False)),
                ('currency', models.CharField(blank=True, max_length=20, null=True)),
                ('currencySymbol', models.CharField(blank=True, max_length=20, null=True)),
                ('currencyName', models.CharField(blank=True, max_length=50, null=True)),
                ('countryEmoji', models.CharField(blank=True, max_length=150, null=True)),
                ('image_url', models.URLField(blank=True, null=True)),
                ('fileId', models.CharField(blank=True, max_length=200, null=True)),
                ('nearest_bus_stop', models.CharField(blank=True, max_length=200, null=True)),
                ('phoneCode', models.CharField(blank=True, max_length=10, null=True)),
                ('stateCode', models.CharField(blank=True, max_length=10, null=True)),
                ('username', models.CharField(blank=True, max_length=30, null=True)),
                ('password', models.CharField(blank=True, max_length=128, null=True)),
                ('is_deleted', models.BooleanField(default=False)),
                ('is_seller', models.BooleanField(default=False)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'ordering': ['id'],
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
    ]
