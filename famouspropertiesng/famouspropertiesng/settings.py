"""
Django settings for famouspropertiesng project.

Generated by 'django-admin startproject' using Django 5.2.5.

For more information on this file, see
https://docs.djangoproject.com/en/5.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.2/ref/settings/
"""

from pathlib import Path
from datetime import timedelta
import requests, os

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-+%t3_kcy-t%=66o$oyh6h+r@o*xo#izk70r7px@ik&as-e5hxq'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = [
    'localhost', # Localhost for development
    '127.0.0.1', # Localhost for development
    'dafetitetemp.pythonanywhere.com', # PythonAnywhere temporary domain
]


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'maillist',		# <- added startapp here
    'products',		# <- added startapp here
    'featuresadvert',		# <- added startapp here
    'productsadvert',		# <- added startapp here
    'carousels',		# <- added startapp here
    'auth_app',		# <- added startapp here
    'users',		# <- added startapp here
    'rest_framework', # Django REST Framework for building APIs
    'corsheaders',  # For cross-origin requests
    'homepage',		# <- added startapp here
    'django_extensions',		# <- added django_extensions here
]

MIDDLEWARE = [
    'corsheaders.middleware.CorsMiddleware', # Middleware for handling CORS
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'famouspropertiesng.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'famouspropertiesng.wsgi.application'


# Database
# https://docs.djangoproject.com/en/5.2/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}


# Password validation
# https://docs.djangoproject.com/en/5.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.2/howto/static-files/

STATIC_URL = 'static/'

# Default primary key field type
# https://docs.djangoproject.com/en/5.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

AUTH_USER_MODEL = 'users.User'

CORS_ALLOWED_ORIGINS = [
    "http://127.0.0.1:3000", # React dev server
    "http://localhost:3000",  # React dev server
    "https://dafetiteogaga.github.io",  # If deployed
]

# This is where collectstatic will put all files
STATIC_ROOT = BASE_DIR / 'static' # this should be auto added in startproject command

# If you have app-specific static (like DRF)
# STATICFILES_DIRS = [
#     BASE_DIR / 'static',
# ]

REST_FRAMEWORK = {
    "DEFAULT_AUTHENTICATION_CLASSES": (
        "rest_framework_simplejwt.authentication.JWTAuthentication",
    )
}

SIMPLE_JWT = {
    "ACCESS_TOKEN_LIFETIME": timedelta(minutes=5),   # default 5, now 15
    "REFRESH_TOKEN_LIFETIME": timedelta(days=2),     # default 1, now 7 days
    "ROTATE_REFRESH_TOKENS": True,                   # issue a new refresh each time
    "BLACKLIST_AFTER_ROTATION": True,                # block old refresh after rotation
}

response = requests.get("https://dafetiteapiendpoint.pythonanywhere.com/get-imagekit-apis/")
data = response.json()
IMAGEKIT_PRIVATE_KEY = data.get("IMAGEKIT_PRIVATE_KEY")  # extract the private key
IMAGEKIT_PUBLIC_KEY = data.get("IMAGEKIT_PUBLIC_KEY")  # extract the public key
IMAGEKIT_URL_ENDPOINT = data.get("IMAGEKIT_URL_ENDPOINT")  # extract the endpoint
# print(f"Private key fetched: {IMAGEKIT_PRIVATE_KEY}")
# print(f"Public key fetched: {IMAGEKIT_PUBLIC_KEY}")
# print(f"ImageKit endpoint fetched: {IMAGEKIT_URL_ENDPOINT}")


# CSRF_TRUSTED_ORIGINS = [
#     "http://localhost:3000",   # React local dev
#     "http://127.0.0.1:3000",   # optional, in case you access via 127.0.0.1
#     "https://yourdomain.com",  # production domain
# ]

# print(f"django dev: {os.environ.get('DJANGO_DEVELOPMENT')}")
